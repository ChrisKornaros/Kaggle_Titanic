## Notes on the Titanic model and the process for using the Jupyter Kernel on the EC2 Server
:::{}
1. First, navigate to Local-Scripts/.AWS/.EC2_Scripts and run the ec2_start.sh script
   ```zsh ec2_start.sh```
2. Next, execute the unix_test_dns.sh script to store the EC2 public DNS in the /etc/hosts file
   ```./unix_test_dns.sh```
3. Use the ssh -i command to connect to the EC2 server, then run the Jupyter kernel image 
    ```docker run -p 8888:8888 titanic-env``` **Look into adding a volume mount command here to persist model/file changes in the EC2**
4. Now that it's running. Use a different terminal window (or the VS Code IDE) and test the DNS name.
   ```ping unix_test.local``` **Need to make this DNS dynamic**
5. In VS Code, open the .ipynb file in the model folder and continue work.
   1. If you need to reconnect to a kernel, use the Titanic preset.
   2. VS Code connects to the EC2 IPv4 address, even though the Kernel tells you 127.0.0.1
6. The format for connecting to the Public IPv4 is `http://IPv4:8888/`
7. To pull the file out of the container and store it on the EC2 server
   1. `docker cp 786853360d97:/home/files/titanic_submission.csv files/titanic_submission.csv`
   2. docker copy `instance-id`:`/path/to/file` `local/path`
:::

### If you need to modify the container
- Do so locally, or anywhere, and then push the change to the GitHub repoistory
- Then, pull the changes into the EC2 server
- Clear the Docker library/cache, and then rebuild the image from scratch, use the following
```docker build -t titanic-env -f .config/Dockerfile .```
- Ensure this is done from the main project folder and uses those flags
  - For Titanic, this is in the admin/Kaggle/Titanic folder in the EC2 instance
  - `--no-cache` ensures it's a fresh build (This will take a while, not worth it in the smaller environment. Rebuild with cache)
  - `-t` sets the name of the image
  - `-f` lets you specify the Dockerfile location
  - `.` lets Docker know that your current working directory is where the build context should take place
